#!/usr/bin/env ruby
# Command line utility to manage
# the zookeeper service registry
$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])

begin
  require 'rubygems'
  require 'bundler/setup'
rescue LoadError
  require 'rubygems'
end
require 'zk-service-registry'
begin
  # load FriendScout24 config
  require 'zk-service-registry-config'
rescue LoadError
end
require 'optparse'

# 
# Return a list of registered services in
# an easy to parse table format
#
def show_service_listing
  out = ""
  service = "SERVICE".ljust(20)
  instance = "INSTANCE".ljust(25)
  data = "STATE".ljust(5)

  # headline
  out << "#{service}\t#{instance}\t#{data}\n"

  # generate service list output
  services = ZK::ServiceInstance.list_services
  services.each do |s|
    s.instances.each do |svc_inst|
      state = svc_inst.data[:state] if svc_inst.data
      out << "#{s.name.ljust(20)}\t#{svc_inst.name.ljust(25)}\t#{state.ljust(5)}\n"
    end
  end
  out
end

# Parse the command line parameters
options = {}
optparse = OptionParser.new do|opts|
  opts.banner = "Usage: zksvclist [-c]"
  opts.on("-c", "run in a loop and list services continuously") do
    options[:continuous] = true
  end

end
optparse.parse!

puts "Connecting to Zookeeper at #{ZK::Config::Hosts} (environment=#{ENV['RACK_ENV']})"
if options[:continuous] 
  last = "" 
  loop do
    current = show_service_listing
    if current != last then
      puts current
      last = current
    end
    sleep 1
  end
else
  puts show_service_listing
end
